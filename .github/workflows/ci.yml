name: CI
on:
  push:
    branches: [ "master", "stdlib-merge" ]
  workflow_dispatch:
jobs:
  ubuntu-20-clang:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Fix mariadb
        run: sudo apt remove mariadb-server mariadb-server-10.3 mariadb-server-core-10.3
      - name: Install submodules
        run: git submodule update --init --recursive
      - name: Install deps
        run: sudo apt-get update && sudo apt-get install git clang cmake make gcc g++ libmariadbclient-dev libssl-dev libbz2-dev libreadline-dev libncurses-dev libboost-all-dev mariadb-server p7zip libmariadb-client-lgpl-dev-compat
      - name: Build tswow
        run: npm run build

  windows-msvc-2019:
    runs-on: windows-2019
    steps:
      # Build
      - name: Clean up space
        run: >
          Remove-Item -Recurse -Force -ErrorAction Ignore "C:\Program Files\dotnet";
          Remove-Item -Recurse -Force -ErrorAction Ignore "C:\Program Files\LLVM";
          Clear-Recyclebin -Force;
      - uses: actions/checkout@v2
      - name: Install submodules
        run: git submodule update --init --recursive
      - name: Setup Build Directory
        uses: DamianReeves/write-file-action@v1.0
        with:
          path: "./build.conf"
          contents: |
            BuildDirectory = "C:/tswow-build"
            InstallDirectory = "../tswow-install"
          write-mode: overwrite
      - name: Build tswow
        run: npm run build-release clean-archives

      # Metadata
      - name: Get Time ID
        id: time
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 0
          format: 'YYYY-MM-DD-HH-mm-ss'
      - name: Get Time Header
        id: time-header
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 0
          format: 'YYYY-MM-DD HH:mm:ss'
      - name: Get SHA
        id: sha
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      # Upload release
      - name: Upload Artifact
        uses: WebFreak001/deploy-nightly@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: "https://uploads.github.com/repos/tswow/tswow/releases/61706427/assets{?name,label}"
          release_id: "61706427"
          asset_path: C:/tswow-build/release.7z
          asset_name: tswow-${{steps.sha.outputs.sha_short}}.7z
          asset_content_type: application/x-7z-compressed
          max_releases: 10